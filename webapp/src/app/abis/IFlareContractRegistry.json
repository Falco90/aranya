{
    "abi": [
        {
            "type": "function",
            "name": "getAllContracts",
            "inputs": [],
            "outputs": [
                {
                    "name": "_names",
                    "type": "string[]",
                    "internalType": "string[]"
                },
                {
                    "name": "_addresses",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getContractAddressByHash",
            "inputs": [
                {
                    "name": "_nameHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getContractAddressByName",
            "inputs": [
                {
                    "name": "_name",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getContractAddressesByHash",
            "inputs": [
                {
                    "name": "_nameHashes",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getContractAddressesByName",
            "inputs": [
                {
                    "name": "_names",
                    "type": "string[]",
                    "internalType": "string[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "stateMutability": "view"
        }
    ],
    "bytecode": {
        "object": "0x",
        "sourceMap": "",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x",
        "sourceMap": "",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "getAllContracts()": "18d3ce96",
        "getContractAddressByHash(bytes32)": "159354a2",
        "getContractAddressByName(string)": "82760fca",
        "getContractAddressesByHash(bytes32[])": "5e11e2d1",
        "getContractAddressesByName(string[])": "76d2b1af"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAllContracts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"_names\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nameHash\",\"type\":\"bytes32\"}],\"name\":\"getContractAddressByHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getContractAddressByName\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_nameHashes\",\"type\":\"bytes32[]\"}],\"name\":\"getContractAddressesByHash\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_names\",\"type\":\"string[]\"}],\"name\":\"getContractAddressesByName\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getContractAddressByHash(bytes32)\":{\"params\":{\"_nameHash\":\"hash of the contract name (keccak256(abi.encode(name))\"}},\"getContractAddressByName(string)\":{\"params\":{\"_name\":\"name of the contract\"}},\"getContractAddressesByHash(bytes32[])\":{\"params\":{\"_nameHashes\":\"hashes of the contract names (keccak256(abi.encode(name))\"}},\"getContractAddressesByName(string[])\":{\"params\":{\"_names\":\"names of the contracts\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAllContracts()\":{\"notice\":\"Returns all contract names and corresponding addresses\"},\"getContractAddressByHash(bytes32)\":{\"notice\":\"Returns contract address for the given name hash - might be address(0)\"},\"getContractAddressByName(string)\":{\"notice\":\"Returns contract address for the given name - might be address(0)\"},\"getContractAddressesByHash(bytes32[])\":{\"notice\":\"Returns contract addresses for the given name hashes - might be address(0)\"},\"getContractAddressesByName(string[])\":{\"notice\":\"Returns contract addresses for the given names - might be address(0)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"dependencies/flare-periphery-0.1.33/src/coston2/IFlareContractRegistry.sol\":\"IFlareContractRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts-5.2.0-rc.1/=dependencies/@openzeppelin-contracts-5.2.0-rc.1/\",\":@openzeppelin-contracts/=dependencies/@openzeppelin-contracts-5.2.0-rc.1/\",\":@openzeppelin/contracts/=dependencies/flare-periphery-0.1.33/dependencies/@openzeppelin-contracts-5.2.0-rc.1/\",\":ds-test/=dependencies/surl-0.0.0/lib/forge-std/lib/ds-test/src/\",\":flare-periphery-0.1.33/=dependencies/flare-periphery-0.1.33/src/\",\":flare-periphery/=dependencies/flare-periphery-0.1.33/\",\":forge-std-1.9.5/=dependencies/forge-std-1.9.5/src/\",\":forge-std/=dependencies/forge-std-1.9.5/src/\",\":solidity-stringutils/=dependencies/surl-0.0.0/lib/solidity-stringutils/\",\":surl-0.0.0/=dependencies/surl-0.0.0/\",\":surl/=dependencies/surl-0.0.0/src/\"],\"viaIR\":true},\"sources\":{\"dependencies/flare-periphery-0.1.33/src/coston2/IFlareContractRegistry.sol\":{\"keccak256\":\"0x358aa3eced2172a3c252cd0c5efeb2572969ac6b64001f62facf185193668cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8627e9e0dca5664cc7f5c9db39a602bd17ae4a2d698a0fb13b274a9474804d31\",\"dweb:/ipfs/QmRNVH3EaykbgjVntcCf2bHWyXWvoL4gEKkdMiXGJdjD2R\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.25+commit.b61c2a91"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAllContracts",
                    "outputs": [
                        {
                            "internalType": "string[]",
                            "name": "_names",
                            "type": "string[]"
                        },
                        {
                            "internalType": "address[]",
                            "name": "_addresses",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_nameHash",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getContractAddressByHash",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "_name",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getContractAddressByName",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "_nameHashes",
                            "type": "bytes32[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getContractAddressesByHash",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "string[]",
                            "name": "_names",
                            "type": "string[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getContractAddressesByName",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "",
                            "type": "address[]"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "getContractAddressByHash(bytes32)": {
                        "params": {
                            "_nameHash": "hash of the contract name (keccak256(abi.encode(name))"
                        }
                    },
                    "getContractAddressByName(string)": {
                        "params": {
                            "_name": "name of the contract"
                        }
                    },
                    "getContractAddressesByHash(bytes32[])": {
                        "params": {
                            "_nameHashes": "hashes of the contract names (keccak256(abi.encode(name))"
                        }
                    },
                    "getContractAddressesByName(string[])": {
                        "params": {
                            "_names": "names of the contracts"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "getAllContracts()": {
                        "notice": "Returns all contract names and corresponding addresses"
                    },
                    "getContractAddressByHash(bytes32)": {
                        "notice": "Returns contract address for the given name hash - might be address(0)"
                    },
                    "getContractAddressByName(string)": {
                        "notice": "Returns contract address for the given name - might be address(0)"
                    },
                    "getContractAddressesByHash(bytes32[])": {
                        "notice": "Returns contract addresses for the given name hashes - might be address(0)"
                    },
                    "getContractAddressesByName(string[])": {
                        "notice": "Returns contract addresses for the given names - might be address(0)"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@openzeppelin-contracts-5.2.0-rc.1/=dependencies/@openzeppelin-contracts-5.2.0-rc.1/",
                "@openzeppelin-contracts/=dependencies/@openzeppelin-contracts-5.2.0-rc.1/",
                "@openzeppelin/contracts/=dependencies/flare-periphery-0.1.33/dependencies/@openzeppelin-contracts-5.2.0-rc.1/",
                "ds-test/=dependencies/surl-0.0.0/lib/forge-std/lib/ds-test/src/",
                "flare-periphery-0.1.33/=dependencies/flare-periphery-0.1.33/src/",
                "flare-periphery/=dependencies/flare-periphery-0.1.33/",
                "forge-std-1.9.5/=dependencies/forge-std-1.9.5/src/",
                "forge-std/=dependencies/forge-std-1.9.5/src/",
                "solidity-stringutils/=dependencies/surl-0.0.0/lib/solidity-stringutils/",
                "surl-0.0.0/=dependencies/surl-0.0.0/",
                "surl/=dependencies/surl-0.0.0/src/"
            ],
            "optimizer": {
                "enabled": false,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "dependencies/flare-periphery-0.1.33/src/coston2/IFlareContractRegistry.sol": "IFlareContractRegistry"
            },
            "evmVersion": "london",
            "libraries": {},
            "viaIR": true
        },
        "sources": {
            "dependencies/flare-periphery-0.1.33/src/coston2/IFlareContractRegistry.sol": {
                "keccak256": "0x358aa3eced2172a3c252cd0c5efeb2572969ac6b64001f62facf185193668cea",
                "urls": [
                    "bzz-raw://8627e9e0dca5664cc7f5c9db39a602bd17ae4a2d698a0fb13b274a9474804d31",
                    "dweb:/ipfs/QmRNVH3EaykbgjVntcCf2bHWyXWvoL4gEKkdMiXGJdjD2R"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 38
}